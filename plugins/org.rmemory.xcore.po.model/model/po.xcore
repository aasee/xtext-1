// Properties for the generated *.genmodel model generator file.
@GenModel(
	complianceLevel="7.0",
	editDirectory="/org.rmemory.xcore.po.model/src",
	editorDirectory="/org.rmemory.xcore.po.model/src",
	modelPluginClass="org.rmemory.xcore.po.model.PoPlugin",
	editPluginClass="org.rmemory.xcore.po.model.PoPlugin",
	editorPluginClass="org.rmemory.xcore.po.model.PoPlugin",
	featureMapWrapperInternalInterface="",
	testSuiteClass="org.rmemory.xcore.po.model.tests.PoAllTests",
	basePackage="org.rmemory.xcore.po.model"
)

// Properties for the generated *.ecore model file.
@Ecore(
	nsURI="http://www.rmemory.org/po/2017/ecore"
)

package po

type Date wraps java.util.Date
type SKU wraps java.lang.String
type Diag wraps org.eclipse.emf.common.util.DiagnosticChain
type Map wraps java.util.Map<Object,Object>

class PurchaseOrder {
	contains USAddress[1] shipTo
	contains USAddress[1] billTo
	contains Item[*] items opposite purchaseOrder
}

class USAddress {
	String[1] name
	String[1] street
	String[1] city
	String[1] state
	int[1] zip
	String[1] country = "US"
	
	refers PurchaseOrder[1] po
}

@Ecore(
	constraints='NonNegativeQuantity ShipDateAfterOrderDate'
)
class Item {
	String[1] productName
	int[1] quantity
	@Ecore(invariant="true")
	op boolean isPriceValid(Diag diagnostics, Map context)
	int[1] USPrice
	String[1] comment
	Date[1] shipDate
	SKU[1] partNum
	
	container PurchaseOrder[1] purchaseOrder opposite items
}